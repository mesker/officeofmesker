/**
 * @file
 * Define your custom Sass mixins and extends here.
 * @see http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin
 */

/* ==========================================================================
   Typography grooming extends
   ========================================================================== */

/* Tight tracking */
%track-in { letter-spacing: -0.025em; }
%track-in-more { letter-spacing: -0.0325em; }

/* Open tracking */
%track-out { letter-spacing: 0.075em; }

/* Style all caps with a slightly open tracking. */
%allcaps { @extend %track-out; text-transform: uppercase; }



/* ==========================================================================
   Clearfix extend
   ========================================================================== */

/**
 * Applies a clearfix ruleset using a placeholder selector. Placeholder selectors
 * do not get compiled uless they are called - removing the nesting issues that
 * can otherwise occur with extends.
 */

%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


/* ==============================================================
   Visually hidden extend
   ============================================================== */

/**
 * Element-invisible as defined by snook.ca
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.element-invisible,
%element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

/* Turns off the element-invisible effect. */
%element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

.element-focusable,
%element-focusable {
  @extend %element-invisible;

  &:active,
  &:focus {
    @extend %element-invisible-off;
  }
}

/* ==============================================================
   Transition mixin
   ============================================================== */

@mixin trans($timing, $easing) {
  -webkit-transition: all $timing $easing;
  -moz-transition: all $timing $easing;
  -o-transition: all $timing $easing;
  transition: all $timing $easing;
}

/* ==============================================================
   Basic Transforms
   ============================================================== */

@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
   @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
      moz-transform-origin: $origin;
       -o-transform-origin: $origin;
      -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
          transform-origin: $origin;
}
